openapi: 3.0.3
info:
  title: Let's eSign API Server API
  description: This API is documented in OpenAPI format and is for use with [**Let's eSign API Server v1.2.x**](https://github.com/letsesign/letsesign-api-server). You will need to deploy Let's eSign API Server at your site to use this API.
  version: v1.2
  license:
    name: MIT
    url: https://github.com/letsesign/letsesign-api-server/blob/main/LICENSE
servers:
  - url: http://localhost
paths:
  ##############################################################################
  #
  #  Send
  #
  ##############################################################################
  "/send":
    post:
      tags:
        - Send
      description: This API is for sending a confidential eSignature request.
      summary: Send an eSignature request
      operationId: send
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                taskConfig:
                  "$ref": "#/components/schemas/taskConfig"
                fieldList:
                  "$ref": "#/components/schemas/fieldList"
                pdfFileName:
                  "$ref": "#/components/schemas/pdfFileName"
                pdfFileData:
                  "$ref": "#/components/schemas/pdfFileData"
              required:
                - taskConfig
                - fieldList
                - pdfFileName
                - pdfFileData
        required: true
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/sendResponse"
        4XX:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorResponse"
  "/send_with_template":
    post:
      tags:
        - Send
      description: This API is for sending a confidential eSignature request using a template.
      summary: Send an eSignature request using a template
      operationId: sendWithTemplate
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                taskConfig:
                  "$ref": "#/components/schemas/taskConfig"
                template:
                  "$ref": "#/components/schemas/template"
              required:
                - taskConfig
                - template
        required: true
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/sendResponse"
        4XX:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorResponse"
  ##############################################################################
  #
  #  Bulk Send
  #
  ##############################################################################
  "/bulk_send":
    post:
      tags:
        - Bulk Send
      description: This API is for submitting confidential eSignature requests in bulk.
      summary: Send eSignature requests in bulk
      operationId: bulkSend
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                taskConfig:
                  "$ref": "#/components/schemas/taskConfigBulk"
                fieldList:
                  "$ref": "#/components/schemas/fieldListBulk"
                pdfFileName:
                  "$ref": "#/components/schemas/pdfFileName"
                pdfFileData:
                  "$ref": "#/components/schemas/pdfFileData"
              required:
                - taskConfig
                - fieldList
                - pdfFileName
                - pdfFileData
        required: true
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/bulkSendResponse"
        4XX:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorResponse"
  "/bulk_send_with_template":
    post:
      tags:
        - Bulk Send
      description: This API is for submitting confidential eSignature requests in bulk using a template.
      summary: Send eSignature requests in bulk using a template
      operationId: bulkSendWithTemplate
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                taskConfig:
                  "$ref": "#/components/schemas/taskConfigBulk"
                template:
                  "$ref": "#/components/schemas/template"
              required:
                - taskConfig
                - template
        required: true
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/bulkSendResponse"
        4XX:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorResponse"
  ##############################################################################
  #
  #  Create Template
  #
  ##############################################################################
  "/create_send_template":
    post:
      tags:
        - Create Template
      description: This API is for creating a template to be used with the **/send_with_template** API.
      summary: Create a template to be used with Send API
      operationId: createSendTemplate
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                fieldList:
                  "$ref": "#/components/schemas/fieldList"
                pdfFileName:
                  "$ref": "#/components/schemas/pdfFileName"
                pdfFileData:
                  "$ref": "#/components/schemas/pdfFileData"
              required:
                - fieldList
                - pdfFileName
                - pdfFileData
        required: true
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/templateResponse"
        4XX:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorResponse"
  "/create_bulk_send_template":
    post:
      tags:
        - Create Template
      description: This API is for creating a template to be used with the **/bulk_send_with_template** API.
      summary: Create a template to be used with Bulk Send API
      operationId: createBulkSendTemplate
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                fieldList:
                  "$ref": "#/components/schemas/fieldListBulk"
                pdfFileName:
                  "$ref": "#/components/schemas/pdfFileName"
                pdfFileData:
                  "$ref": "#/components/schemas/pdfFileData"
              required:
                - fieldList
                - pdfFileName
                - pdfFileData
        required: true
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/templateResponse"
        4XX:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorResponse"
  ##############################################################################
  #
  #  Preview
  #
  ##############################################################################
  "/preview_send":
    post:
      tags:
        - Preview
      description: This API is a dry run of the **/send** API and will return the pre-rendered PDF document for preview.
      summary: Obtain the PDF preview of /send
      operationId: previewSend
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                taskConfig:
                  "$ref": "#/components/schemas/taskConfig"
                fieldList:
                  "$ref": "#/components/schemas/fieldList"
                pdfFileName:
                  "$ref": "#/components/schemas/pdfFileName"
                pdfFileData:
                  "$ref": "#/components/schemas/pdfFileData"
              required:
                - taskConfig
                - fieldList
                - pdfFileName
                - pdfFileData
        required: true
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/pdfPreview"
        4XX:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorResponse"
  "/preview_send_with_template":
    post:
      tags:
        - Preview
      description: This API is a dry run of the **/send_with_template** API and will return the pre-rendered PDF document for preview.
      summary: Obtain the PDF preview of /send_with_template
      operationId: previewSendWithTemplate
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                taskConfig:
                  "$ref": "#/components/schemas/taskConfig"
                template:
                  "$ref": "#/components/schemas/template"
              required:
                - taskConfig
                - template
        required: true
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/pdfPreview"
        4XX:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorResponse"
  "/preview_bulk_send":
    post:
      tags:
        - Preview
      description: This API is a dry run of the **/bulk_send** API and will return the pre-rendered PDF document for preview.
      summary: Obtain the PDF preview of /bulk_send
      operationId: previewBulkSend
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                taskConfig:
                  "$ref": "#/components/schemas/taskConfigBulk"
                fieldList:
                  "$ref": "#/components/schemas/fieldListBulk"
                pdfFileName:
                  "$ref": "#/components/schemas/pdfFileName"
                pdfFileData:
                  "$ref": "#/components/schemas/pdfFileData"
                signerNo:
                  "$ref": "#/components/schemas/signerNo"
              required:
                - taskConfig
                - fieldList
                - pdfFileName
                - pdfFileData
        required: true
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/pdfPreview"
        4XX:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorResponse"
  "/preview_bulk_send_with_template":
    post:
      tags:
        - Preview
      description: This API is a dry run of the **/bulk_send_with_template** API and will return the pre-rendered PDF document for preview.
      summary: Obtain the PDF preview of /bulk_send_with_template
      operationId: previewBulkSendWithTemplate
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                taskConfig:
                  "$ref": "#/components/schemas/taskConfigBulk"
                template:
                  "$ref": "#/components/schemas/template"
                signerNo:
                  "$ref": "#/components/schemas/signerNo"
              required:
                - taskConfig
                - template
        required: true
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/pdfPreview"
        4XX:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorResponse"
  ##############################################################################
  #
  #  Verify
  #
  ##############################################################################
  "/verify_pdf":
    post:
      tags:
        - Verify
      description: This API is for verifying an eSigned PDF document. Whether the eSigned document matches the original unsigned document is checked against the hash value binding the eSigned document to the original unsigned document. The hash value is part of the returned info of Send API.
      summary: Verify PDF
      operationId: verifyPdf
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                pdfBufferB64:
                  "$ref": "#/components/schemas/pdfBufferB64"
                spfBufferB64:
                  "$ref": "#/components/schemas/spfBufferB64"
                bindingDataHash:
                  "$ref": "#/components/schemas/bindingDataHash"
              required:
                - pdfBufferB64
                - spfBufferB64
                - bindingDataHash
        required: true
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/verifyResponse"
        4XX:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorResponse"
  "/verify_pdf_with_human":
    post:
      tags:
        - Verify
      description: This API is for verifying an eSigned PDF document. Whether the eSigned document matches the original unsigned document needs to be checked with human eyes.
      summary: Verify PDF with human intervention
      operationId: verifyPdfWithHuman
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                pdfBufferB64:
                  "$ref": "#/components/schemas/pdfBufferB64"
                spfBufferB64:
                  "$ref": "#/components/schemas/spfBufferB64"
              required:
                - pdfBufferB64
                - spfBufferB64
        required: true
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/verifyResponse"
        4XX:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorResponse"
  ##############################################################################
  #
  #  Retrieve
  #
  ##############################################################################
  "/get_status":
    get:
      tags:
        - Retrieve
      description: This API is for getting the status of a sent request.
      summary: Get the status of a sent request
      operationId: getStatus
      parameters:
        - "$ref": "#/components/parameters/taskIDParam"
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/getStatusResponse"
        4XX:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorResponse"
  "/get_result":
    post:
      tags:
        - Retrieve
      description: This API is for getting the result of a sent request.
      summary: Get the result of a sent request
      operationId: getResult
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                taskID:
                  "$ref": "#/components/schemas/taskID"
                imapConfig:
                  "$ref": "#/components/schemas/imapConfig"
                taskPassword:
                  "$ref": "#/components/schemas/taskPassword"
              required:
                - taskID
                - imapConfig
        required: true
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                type: object
                properties:
                  pdfBufferB64:
                    "$ref": "#/components/schemas/pdfBufferB64"
                  spfBufferB64:
                    "$ref": "#/components/schemas/spfBufferB64"
        4XX:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorResponse"
  ##############################################################################
  #
  #  Components
  #
  ##############################################################################
components:
  schemas:
    template:
      type: string
      description: The Base64 string that encodes the template
    pdfBufferB64:
      type: string
      description: The Base64 string that encodes an eSigned PDF document
    spfBufferB64:
      type: string
      description: The Base64 string that encodes the corresponding signing proof digitally signed by AWS hardware security module
    bindingDataHash:
      type: string
      description: The Base64 string that encodes the hash value binding the eSignature request result to the original user data
    taskPassword:
      type: string
      description: The PDF/ZIP password when the **enhanced email privacy** feature is enabled
    ##############################################################################
    #
    #  Request components
    #
    ##############################################################################
    signerInfoList:
      type: array
      description: The ordered list in which each object represents a signer, with the zero-based index being the signer's sequence number
      items:
        type: object
        properties:
          name:
            type: string
            description: The signer's name
            minLength: 1
            maxLength: 100
          emailAddr:
            type: string
            description: The signer's email address
            format: email
          locale:
            type: string
            description: The signer's locale
            enum:
              - en-US
              - zh-TW
          phoneNumber:
            type: string
            description: A phone number in [E.164](https://en.wikipedia.org/wiki/E.164) format
        required:
          - name
          - emailAddr
          - locale
      minItems: 1
    taskConfig:
      type: object
      description: The configuration of an eSignature request task
      properties:
        options:
          description: The task options
          type: object
          properties:
            inOrder:
              type: boolean
              description: The flag indicating if a multiple-signer task shall be executed in the one-by-one order
            senderMsg:
              type: string
              description: The text message that the sender wants to pass to the signer(s)
              maxLength: 1000
            notificantEmail:
              type: string
              description: The email address of the notificant (who can receive email notifications as well as the final result)
              format: email
            notificantLocale:
              type: string
              description: The language used in email notifications
              enum:
                - en-US
                - zh-TW
          required:
            - inOrder
            - senderMsg
            - notificantEmail
            - notificantLocale
        signerInfoList:
          "$ref": "#/components/schemas/signerInfoList"
      required:
        - options
        - signerInfoList
    taskConfigBulk:
      type: object
      description: The configuration of a bulk of eSignature request tasks
      properties:
        options:
          description: The task options
          type: object
          properties:
            senderMsg:
              type: string
              description: The text message that the sender wants to pass to the signer(s)
              maxLength: 1000
            notificantEmail:
              type: string
              description: The email address of the notificant (who can receive email notifications as well as the final result)
              format: email
            notificantLocale:
              type: string
              description: The language used in email notifications
              enum:
                - en-US
                - zh-TW
          required:
            - senderMsg
            - notificantEmail
            - notificantLocale
        signerInfoList:
          "$ref": "#/components/schemas/signerInfoList"
      required:
        - options
        - signerInfoList
    signerNo:
      type: integer
      description: The zero-based sequence number of the signer
    fieldInfo:
      type: object
      description: The field info
      properties:
        pageNo:
          type: integer
          description: The page where the field is located
          minimum: 1
        x:
          type: integer
          description: The distance from the left side of the PDF document to the left side of the field (in points)

          minimum: 0
          example: 100
        y:
          type: integer
          description: The distance from the top side of the PDF document to the top side of the field (in points)
          minimum: 0
          example: 300
        height:
          type: integer
          description: The height of the field (in points)
          minimum: 12
          maximum: 64
          example: 32
        type:
          type: integer
          description: |
            - 0: signature field
            - 1: date signed field
            - 2: full name field
            - 3: email address field
            - 4: phone number field
          enum:
            - 0
            - 1
            - 2
            - 3
            - 4
      required:
        - pageNo
        - x
        - y
        - height
        - type
      minItems: 1
    fieldList:
      type: array
      description: The list in which each object represents a field to be rendered on the PDF document
      items:
        type: object
        properties:
          signerNo:
            "$ref": "#/components/schemas/signerNo"
          fieldInfo:
            "$ref": "#/components/schemas/fieldInfo"
        required:
          - signerNo
          - fieldInfo
      minItems: 1
    fieldListBulk:
      type: array
      description: The list in which each object represents a field to be rendered on the PDF document
      items:
        type: object
        properties:
          fieldInfo:
            "$ref": "#/components/schemas/fieldInfo"
        required:
          - signerNo
          - fieldInfo
      minItems: 1
    pdfFileName:
      type: string
      description: The file name of the PDF document
    pdfFileData:
      type: string
      description: The Base64 string that encodes the PDF document
    imapConfig:
      type: object
      description: The parameters needed for accessing the notificant's IMAP server
      properties:
        host:
          type: string
          description: The hostname of the notificant's IMAP server
        port:
          type: integer
          description: The port number of the notificant's IMAP server
        user:
          type: string
          description: The username for IMAP authentication
        password:
          type: string
          description: The password for IMAP authentication
      required:
        - host
        - port
        - user
        - password
    ##############################################################################
    #
    #  Response components
    #
    ##############################################################################
    # Error
    errorResponse:
      type: object
      properties:
        errorMsg:
          type: string
          description: The error message
    # Send
    taskID:
      type: string
      description: The request task ID
    sendResponse:
      type: object
      properties:
        taskID:
          "$ref": "#/components/schemas/taskID"
        bindingDataHash:
          "$ref": "#/components/schemas/bindingDataHash"
        taskPassword:
          "$ref": "#/components/schemas/taskPassword"
    # Bulk Send
    taskInfo:
      type: object
      properties:
        signerName:
          type: string
          description: The signer's name
        signerEmailAddr:
          type: string
          description: The signer's email address
        signerPhoneNumber:
          type: string
          description: The signer's phone number
    taskSuccess:
      type: object
      properties:
        taskInfo:
          "$ref": "#/components/schemas/taskInfo"
        sendResponse:
          "$ref": "#/components/schemas/sendResponse"
    taskError:
      type: object
      properties:
        taskInfo:
          "$ref": "#/components/schemas/taskInfo"
        errorResponse:
          "$ref": "#/components/schemas/errorResponse"
    bulkSendResponse:
      type: object
      properties:
        taskList:
          description: Each object in **taskList** represents the result of a request task
          type: array
          items:
            oneOf:
              - "$ref": "#/components/schemas/taskSuccess"
              - "$ref": "#/components/schemas/taskError"
    # Create Temlpate
    templateResponse:
      type: object
      properties:
        template:
          "$ref": "#/components/schemas/template"
    # Preview
    pdfPreview:
      type: object
      properties:
        pdfPreviewB64:
          type: string
          description: The Base64 string that encodes the pre-rendered PDF file for preview
    # Verify
    magicNumber:
      type: string
      description: The unique identifier generated by Let's eSign Enclave in runtime
    signerList:
      type: array
      description: "The signer list"
      items:
        type: object
        properties:
          name:
            type: string
            description: The signer's name
          emailAddr:
            type: string
            description: The signer's email address
          phoneNumber:
            type: string
            description: The signer's phone number
          ipAddress:
            type: string
            description: The signer's IP address
          signingTime:
            type: integer
            description: The signing time in Unix epoch format (0 indicates unsigned)
            example: 1656901999
    verifyResponse:
      type: object
      properties:
        enclaveVersion:
          description: The version of the Let's eSign Enclave that processed the request
          type: string
        enclaveCodeURL:
          description: The URL to the code of the Let's eSign Enclave that processed the request
          type: string
        summary:
          description: The summary of the processed request task
          type: object
          properties:
            signerList:
              "$ref": "#/components/schemas/signerList"
            magicNumber:
              "$ref": "#/components/schemas/magicNumber"
            bindingDataHash:
              "$ref": "#/components/schemas/bindingDataHash"
    # Retrieve
    taskTime:
      type: integer
      description: The task creation time in Unix epochs
      example: 1656901555
    isComplete:
      type: boolean
      description: The flag indicating if the task is complete
    normalResponse:
      type: object
      properties:
        isComplete:
          "$ref": "#/components/schemas/isComplete"
        signerList:
          "$ref": "#/components/schemas/signerList"
    statusNormal:
      type: object
      properties:
        taskID:
          "$ref": "#/components/schemas/taskID"
        taskTime:
          "$ref": "#/components/schemas/taskTime"
        normalResponse:
          "$ref": "#/components/schemas/normalResponse"
    statusError:
      type: object
      properties:
        taskID:
          "$ref": "#/components/schemas/taskID"
        taskTime:
          "$ref": "#/components/schemas/taskTime"
        errorResponse:
          "$ref": "#/components/schemas/errorResponse"
    getStatusResponse:
      type: object
      properties:
        status:
          oneOf:
            - "$ref": "#/components/schemas/statusNormal"
            - "$ref": "#/components/schemas/statusError"
  ##############################################################################
  #
  #  Parameters
  #
  ##############################################################################
  parameters:
    taskIDParam:
      name: taskID
      in: query
      description: The request task ID
      required: true
      schema:
        type: string
    bindingDataHashParam:
      name: bindingDataHash
      in: query
      description: The Base64 string that encodes the hash value binding the eSignature request result to the original user data
      required: true
      schema:
        type: string
